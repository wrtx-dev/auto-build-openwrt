name: macos-build-openwrt

on:
    workflow_dispatch:
      inputs:
        openwrt_version:
          description: "set openwrt's source code's brach \
            or tag or commit id(sha1 value)"
          required: true
          type: string
          default: "master"
        macos_version:
          description: "set macos' version"
          required: true
          type: choice
          default: latest
          options:
            - latest
            - "12"
            - "13"
            - "14"

run-name: "build openwrt version: ${{ inputs.openwrt_version }} \
    using macos ${{ inputs.macos_version }}"

jobs:
    build-openwrt:
        runs-on: macos-${{ inputs.macos_version }}
        env:
            openwrt_dir: /Volumes/OpenWrt/openwrt
            openwrt_volumn: /Volumes/OpenWrt
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: check arch
              id: check_arch
              run: |
                archs=$(uname -a)
                mac_arch=${archs[${#archs[@]}]}
                echo "arch=${mac_arch}" >> $GITHUB_OUTPUT
                echo "arch: ${mac_arch}"


            - name: set file system
              run: |
                hdiutil create -size 20g -type SPARSE -fs "Case-sensitive HFS+" \
                    -volname OpenWrt OpenWrt.sparseimage
                hdiutil attach OpenWrt.sparseimage

            - name: crate arm64 env.sh
              if: steps.check_arch.outputs.arch != 'x86_64'
              run: |
                cd ${{ env.openwrt_volumn }}
                echo 'PATH="/opt/homebrew/opt/make/libexec/gnubin:$PATH"' >> env.sh
                echo 'PATH="/opt/homebrew/opt/gnu-getopt/bin:$PATH"' >> env.sh
                echo 'PATH="/opt/homebrew/opt/gettext/bin:$PATH"' >> env.sh
                echo 'PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"' >> env.sh
                echo 'PATH="/opt/homebrew/opt/findutils/libexec/gnubin:$PATH"' >> env.sh
                echo 'export PATH' >> env.sh

            - name: create x86_64 env.sh
              if: steps.check_arch.outputs.arch == 'x86_64'
              run: |
                cd ${{ env.openwrt_volumn }}
                echo 'PATH="/usr/local/opt/make/libexec/gnubin:$PATH"' >> env.sh
                echo 'PATH="/usr/local/opt/gnu-getopt/bin:$PATH"' >> env.sh
                echo 'PATH="/usr/local/opt/gettext/bin:$PATH"' >> env.sh
                echo 'PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"' >> env.sh
                echo 'PATH="/usr/local/opt/findutils/libexec/gnubin:$PATH"' >> env.sh
                echo 'export PATH' >> env.sh

            - name: set env.sh exec
              run: |
                cd ${{ env.openwrt_volumn }}
                chmod +x env.sh

            - name: install deps
              run: |
                cd ${{ env.openwrt_volumn }}
                brew install coreutils findutils gawk grep \
                    gnu-getopt gnu-tar wget diffutils git-extras quilt svn make ncurses pkg-config

            - name: clone openwrt
              run: |
                cd ${{ env.openwrt_volumn }}
                mkdir openwrt
                bash ${{ github.workspace }}/clone_openwrt.sh ${{ inputs.openwrt_version }}
            
            - name: update feeds
              run: |
                source ${{ env.openwrt_volumn }}/env.sh
                cd ${{ env.openwrt_dir }}
                ./scripts/feeds update -a

            - name: install feeds
              run: |
                source ${{ env.openwrt_volumn }}/env.sh
                cd ${{ env.openwrt_dir }}
                ./scripts/feeds install -a

            - name: make .config file
              run: |
                source ${{ env.openwrt_volumn }}/env.sh
                cd ${{ env.openwrt_volumn }}
                cp ${{ github.workspace }}/x86_64-config ${{ env.openwrt_dir }}/.config
                cd ${{ env.openwrt_dir }}
                bash ./scripts/diffconfig.sh .config > diffconfig
                mv diffconfig .config
                make defconfig
                make oldconfig

            - name: make
              id: build
              run: |
                cd ${{ env.openwrt_dir }}
                source ${{ env.openwrt_volumn }}/env.sh
                make -j$(nproc) || make -j1 V=sc
                echo "status=success" >> $GITHUB_OUTPUT

            - name: pick files
              id: pick
              if: steps.build.outputs.status == 'success' && !cancelled()
              run: |
                cd ${{ env.openwrt_dir }}/bin/targets/*/*
                rm -rf packages
                echo "ROOTFS_FILE=$(pwd)/$(ls *rootfs.tar.gz)" >> $GITHUB_ENV
                echo "ROOTFS=$(ls *rootfs.tar.gz)" >> $GITHUB_OUTPUT
                echo "status=success" >> $GITHUB_OUTPUT

            - name: artifact
              uses: actions/upload-artifact@v4
              if: steps.pick.outputs.status == 'success' && !cancelled()
              with:
                name: openwrt_rootfs
                path: ${{ env.ROOTFS_FILE }}

                
