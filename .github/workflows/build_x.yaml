name:
  build-openwrt-x

on:
  workflow_dispatch:
    inputs:
      commit_id:
        description: "tag or branch or commit id(sha1 value)"
        required: true
        type: string
        default: "715634e6d1443eacdcb84b04d1028c1564b08dbf"           
      menu_config:
        description: "make menuconfig"
        required: true
        type: boolean


jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v4

      - name: setup build environ
        id: setup
        run: sudo apt update && sudo apt -y install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-setuptools rsync swig unzip zlib1g-dev file wget libpcre2-dev && echo "status=success" >> $GITHUB_OUTPUT

      - name: clone openwrt
        if: steps.setup.outputs.status == 'success' && !cancelled()
        run: bash clone_openwrt.sh ${{ inputs.commit_id }}

      - name: update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: install feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: copy .config file
        run: cp x86_64-config openwrt/.config

      - name: make menuconfig
        if: ${{ inputs.menu_config }}
        run: bash x.sh

      - name: build openwrt
        id: build
        run: cd openwrt && make -j2 && echo "status=success" >> $GITHUB_OUTPUT

      - name: pick files
        id: pick
        if: steps.build.outputs.status == 'success' && !cancelled()
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$(pwd)" >>$GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT

      - name: upload
        uses: actions/upload-artifact@v4
        if: steps.pick.outputs.status == 'success' && !cancelled()
        with:
          name: openwrt_rootfs
          path: ${{ env.FIRMWARE }}/*rootfs.tar.gz
