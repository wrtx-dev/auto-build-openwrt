name:
  build-ImmortalWrt

on:
  workflow_dispatch:
    inputs:
      commit_id:
        description: "tag or branch or commit id(sha1 value)"
        required: true
        type: string
        default: "master"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:


      - name: setup build environ
        id: setup
        run: |
            sudo apt update -y
            sudo apt full-upgrade -y
            sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
              bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
              g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
              libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 \
              libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lld llvm lrzsz mkisofs msmtp \
              nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply \
              python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig \
              texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd
            sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'

      - name: Maximize build disk space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true
    
      - name: check disk space
        run: |
          du -h -d 0
          df -hT
    
      - name: checkout
        uses: actions/checkout@v4 
      - name: clone ImmortalWrt
        run: |
          mkdir ImmortalWrt
          cd ImmortalWrt
          git init
          git remote add origin https://github.com/immortalwrt/immortalwrt.git
          git fetch origin ${{ inputs.commit_id }}
          git reset --hard FETCH_HEAD

      - name: update feeds
        run: |
          cd ImmortalWrt 
          ./scripts/feeds update -a

      - name: install feeds
        run: |
          cd ImmortalWrt
          ./scripts/feeds install -a

      - name: make config file
        run: |
          cp immortalwrt_x86_config ImmortalWrt/.config
          cd ImmortalWrt
          bash ./scripts/diffconfig.sh .config > diffconfig
          mv diffconfig .config
          make defconfig
          make oldconfig

      # - name: copy .config file
      #   run: cp x86_64-config ImmortalWrt/.config

      # - name: build ImmortalWrt
      #   id: build
      #   run: cd ImmortalWrt && make -j$(($(nproc) *2)) && echo "status=success" >> $GITHUB_OUTPUT
      # - name: make def config
      #   run: |
      #     cd ImmortalWrt
      #     make defconfig
        
      - name: build ImmortalWrt
        id: build
        run: |
          cd ImmortalWrt
          make -j$(nproc) && echo "status=success" >> $GITHUB_OUTPUT || make -j1 V=sc

      - name: pick files
        id: pick
        if: steps.build.outputs.status == 'success' && !cancelled()
        run: |
          cd ImmortalWrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$(pwd)" >>$GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT

      - name: upload
        uses: actions/upload-artifact@v4
        if: steps.pick.outputs.status == 'success' && !cancelled()
        with:
          name: ImmortalWrt_rootfs
          path: ${{ env.FIRMWARE }}/*rootfs.tar.gz
